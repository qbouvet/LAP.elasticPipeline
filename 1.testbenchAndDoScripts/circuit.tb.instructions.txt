# instructions must be written in binary radix, 
# with no comment afterwards on the line.
# they are as described :
#
#
# register type instruction
# adrW adrA adrB opx   imm5 op  
# |---||---||---||----||---||----|   
#
#
# immediate type instruction
# adrW adrA imm16           op 
# |---||---||--------------||----|
#
# 
# existing instructions : 
# addi
# |---||---||--------------||----|
# wwwwwaaaaaiiiiiiiiiiiiiiii000000
# op1 - a,b -> a*(a+b)
# |---||---||---||----||---||----|  
# wwwwwaaaaabbbbb000001iiiii100000


# load values 1 - 5 in the first 5 registers :
|---||---||--------------||----|
00001000000000000000000001000000
00010000000000000000000010000000
00011000000000000000000011000000
00100000000000000000000100000000
00101000000000000000000101000000


# read the value written in the register file
#adrW adrA imm16           op 
|---||---||--------------||----|
# addi r1, r1, 0
00001000010000000000000000000000
# addi r2, r2, 0
00010000100000000000000000000000
# addi r3, r3, 0
00011000110000000000000000000000
# addi r4, r4, 0
00100001000000000000000000000000
# addi r5, r5, 0
00101001010000000000000000000000


# performs register operations
#adrW adrA adrB opx   imm5 op  
|---||---||---||----||---||----|  
# op1 r6, r1, r2
00110000010001000000100000100000
# op1 r7, r3, r4
00111000110010000000100000100000
# op1 r8, r5, r5
01000001010010100000100000100000


# read results
# addi r6, r6, 0
00110001100000000000000000000000
# addi r7, r7, 0
00111001110000000000000000000000
# addi r8, r8, 0
01000010000000000000000000000000


#finish
00000000000000000000000000000000
